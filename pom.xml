<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.xiangqian.monolithic</groupId>
    <artifactId>monolithic</artifactId>
    <version>2022.09</version>
    <packaging>pom</packaging>
    <name>${artifactId}</name>
    <url>https://github.com/xiangqians/monolithic</url>
    <description>单体式应用</description>

    <modules>
        <module>common</module>
        <module>emqx</module>
        <module>kafka</module>
        <module>mysql-binlog</module>
        <module>sse</module>
        <module>task-scheduler</module>
        <module>webflux</module>
        <module>webmvc</module>
        <module>webrtc</module>
        <module>websocket</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!-- 跳过单元测试 -->
        <skipTests>true</skipTests>

        <!-- maven编译插件版本 -->
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>

        <!-- spring-boot-dependencies -->
        <!-- https://spring.io/projects/spring-boot#learn -->
        <!-- 3.1.1 GA -->
        <spring-boot-dependencies.version>3.1.1</spring-boot-dependencies.version>

        <!-- apache-commons -->
        <apache-commons-io.version>2.11.0</apache-commons-io.version>
        <apache-commons-collections.version>4.4</apache-commons-collections.version>

        <guava.version>32.1.3-jre</guava.version>

        <!-- springdoc -->
        <!-- https://github.com/springdoc/springdoc-openapi -->
        <!-- https://springdoc.org/index.html#migrating-from-springfox -->
        <springdoc.version>2.0.4</springdoc.version>

        <!-- swagger core v3 -->
        <swagger-core.version>2.2.8</swagger-core.version>

        <!-- knife4j -->
        <knife4j.version>4.1.0</knife4j.version>

        <!-- mysql-connector -->
        <mysql-connector.version>8.0.30</mysql-connector.version>

        <!-- mybatis-plus -->
        <mybatis-plus.version>3.5.3.1</mybatis-plus.version>

        <!-- apache-velocity-engine -->
        <apache-velocity-engine.version>2.3</apache-velocity-engine.version>

        <!-- nimbus-jose-jwt -->
        <nimbus-jose-jwt.version>9.31</nimbus-jose-jwt.version>

        <!-- bootstrap -->
        <bootstrap.version>5.3.0</bootstrap.version>

        <jwt.version>0.12.5</jwt.version>

        <!-- javascript解释器 -->
        <mozilla-rhino.version>1.7.14</mozilla-rhino.version>

        <redisson.version>3.31.0</redisson.version>

        <minio.version>8.5.10</minio.version>

        <clickhouse-jdbc.version>0.6.1</clickhouse-jdbc.version>

        <influxdb-client.version>6.11.0</influxdb-client.version>

        <mysql-binlog-connector.version>0.29.2</mysql-binlog-connector.version>

        <paho.version>1.2.5</paho.version>

        <javacv.version>1.5.10</javacv.version>

        <curator.version>5.1.0</curator.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- @common::start -->
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-biz</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-clickhouse</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-emqx</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-mysql</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-mail</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-minio</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-redis</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xiangqian.monolithic</groupId>
                <artifactId>common-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- @common::end -->

            <!-- @curator::start -->
            <!-- Curator是一个Apache的开源项目，提供了一套易用的API来简化ZooKeeper客户端的操作，提供了一系列的高级特性和工具类，如分布式锁、选举、缓存等。 -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>

            <!-- curator-recipes
             | 锁：包括共享锁、共享可重入锁、读写锁等。
             | 选举：Leader选举算法。
             | Barrier：阻止分布式计算直至某个条件被满足的“栅栏”，可以看做JDK Concurrent包中Barrier的分布式实现。
             | 缓存：三种Cache及监听机制。
             | 持久化结点：连接或Session终止后仍然在ZooKeeper中存在的结点。
             | 队列：分布式队列、分布式优先级队列等。
             |-->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <!-- @curator::end -->

            <dependency>
                <groupId>org.bytedeco</groupId>
                <artifactId>javacv</artifactId>
                <version>${javacv.version}</version>
            </dependency>

            <!--  Eclipse Paho MQTT 客户端库 -->
            <dependency>
                <groupId>org.eclipse.paho</groupId>
                <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
                <version>${paho.version}</version>
            </dependency>

            <!-- 处理 MySQL binlog（二进制日志）库
             | https://github.com/shyiko/mysql-binlog-connector-java
             | https://github.com/osheroff/mysql-binlog-connector-java
             |-->
            <dependency>
                <groupId>com.zendesk</groupId>
                <artifactId>mysql-binlog-connector-java</artifactId>
                <version>${mysql-binlog-connector.version}</version>
            </dependency>

            <dependency>
                <groupId>com.influxdb</groupId>
                <artifactId>influxdb-client-java</artifactId>
                <version>${influxdb-client.version}</version>
            </dependency>

            <dependency>
                <groupId>com.clickhouse</groupId>
                <artifactId>clickhouse-jdbc</artifactId>
                <version>${clickhouse-jdbc.version}</version>
            </dependency>

            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>

            <!-- @Redis::start -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <!-- @Redis::end -->

            <!-- Rhino JavaScript 引擎
             | Rhino 是由 Mozilla 开发的一个基于 Java 的开源 JavaScript 引擎，它允许在 Java 环境中执行 JavaScript 代码。
             |-->
            <dependency>
                <groupId>org.mozilla</groupId>
                <artifactId>rhino</artifactId>
                <version>${mozilla-rhino.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jwt.version}</version>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>bootstrap</artifactId>
                <version>${bootstrap.version}</version>
            </dependency>

            <!-- @mybatis::start -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <!-- mybatis代码生成器 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <!-- velocity模板引擎 -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${apache-velocity-engine.version}</version>
            </dependency>
            <!-- @mybatis::end -->

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
            </dependency>

            <!-- @springdoc::start
             | https://springdoc.org/index.html#getting-started
             |-->
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations-jakarta</artifactId>
                <version>${swagger-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-common</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!-- @springdoc::end -->

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- @apache-commons::start -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${apache-commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${apache-commons-collections.version}</version>
            </dependency>
            <!-- @apache-commons::end -->

            <!-- https://spring.io/projects/spring-boot#learn -->
            <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${artifactId}-${spring.profiles.active}-${version}</finalName>
        <resources>
            <!-- 解决Maven压缩资源导致文件损坏问题，如：ico文件 -->
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/**.ico</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/**.ico</include>
                </includes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!-- 编译插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <target>${maven.compiler.target}</target>
                        <source>${maven.compiler.source}</source>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>

                <!-- spring-boot打包插件 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-dependencies.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- 环境标识 -->
    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
            <activation>
                <!-- 默认环境 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <spring.profiles.active>test</spring.profiles.active>
            </properties>
        </profile>

        <!-- 正式环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
            </properties>
        </profile>
    </profiles>

</project>
